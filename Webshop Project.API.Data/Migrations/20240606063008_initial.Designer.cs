// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Webshop_Project.API.Data;

#nullable disable

namespace Webshop_Project.API.Data.Migrations
{
    [DbContext(typeof(WebshopDBContext))]
    [Migration("20240606063008_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.BasketEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double>("ShippingPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Basket");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7495),
                            IsActive = true,
                            ShippingPrice = 0.0,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7496)
                        });
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.BasketProductEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BasketID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("BasketID");

                    b.HasIndex("ProductID");

                    b.ToTable("BasketProducts");
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.BrandEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7328),
                            IsActive = true,
                            Name = "Samsung",
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7329)
                        },
                        new
                        {
                            ID = 2,
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7332),
                            IsActive = true,
                            Name = "Apple",
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7334)
                        },
                        new
                        {
                            ID = 3,
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7335),
                            IsActive = true,
                            Name = "Google",
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7336)
                        },
                        new
                        {
                            ID = 4,
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7337),
                            IsActive = true,
                            Name = "Huawei",
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7338)
                        },
                        new
                        {
                            ID = 5,
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7339),
                            IsActive = true,
                            Name = "OnePlus",
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7340)
                        });
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.CategoryEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7216),
                            IsActive = true,
                            Name = "Smartphones",
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7240)
                        },
                        new
                        {
                            ID = 2,
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7244),
                            IsActive = true,
                            Name = "Accessories",
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7245)
                        },
                        new
                        {
                            ID = 3,
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7246),
                            IsActive = true,
                            Name = "Tablets",
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7248)
                        },
                        new
                        {
                            ID = 4,
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7249),
                            IsActive = true,
                            Name = "Wearables",
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7250)
                        });
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.OrderEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StreetNumber")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.OrderProductEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("OrderEntityID")
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("SmartphoneEntityID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("OrderEntityID");

                    b.HasIndex("SmartphoneEntityID");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.SmartphoneEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BrandID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Colour")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Image")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MemoryCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("ScreenSize")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("BrandID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Smartphones");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BrandID = 1,
                            CategoryID = 1,
                            Colour = "Phantom Gray",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7365),
                            Description = "Latest Samsung smartphone with high-end specs.",
                            Image = "https://image-us.samsung.com/SamsungUS/home/mobile/phones/pdp/galaxy-s21-fe-5g/gallery/SM-G990U-graphite-1.png",
                            IsActive = true,
                            MemoryCapacity = 128,
                            Name = "Samsung Galaxy S21",
                            Price = 799.99000000000001,
                            ScreenSize = 6.2000000000000002,
                            Stock = 25,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7366)
                        },
                        new
                        {
                            ID = 2,
                            BrandID = 2,
                            CategoryID = 1,
                            Colour = "Midnight",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7372),
                            Description = "New iPhone with advanced features.",
                            Image = "https://store.storeimages.cdn-apple.com/4668/as-images.apple.com/is/refurb-iphone-13-starlight-2023?wid=1144&hei=1144&fmt=jpeg&qlt=90&.v=1679072987025",
                            IsActive = true,
                            MemoryCapacity = 256,
                            Name = "Apple iPhone 13",
                            Price = 999.99000000000001,
                            ScreenSize = 6.0999999999999996,
                            Stock = 30,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7373)
                        },
                        new
                        {
                            ID = 3,
                            BrandID = 3,
                            CategoryID = 1,
                            Colour = "Stormy Black",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7375),
                            Description = "Google's latest smartphone with clean Android experience.",
                            Image = "https://static.fnac-static.com/multimedia/Images/FR/MDM/2f/0a/05/17107503/1540-1/tsp20240222071736/Smartphone-Google-Pixel-6-6-4-5G-128-Go-Noir-Carbone.jpg",
                            IsActive = true,
                            MemoryCapacity = 128,
                            Name = "Google Pixel 6",
                            Price = 699.99000000000001,
                            ScreenSize = 6.4000000000000004,
                            Stock = 20,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7377)
                        },
                        new
                        {
                            ID = 4,
                            BrandID = 4,
                            CategoryID = 1,
                            Colour = "Golden Black",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7378),
                            Description = "High-end smartphone from Huawei.",
                            Image = "https://consumer.huawei.com/content/dam/huawei-cbg-site/common/mkt/pdp/phones/p50-pro/list/black.png",
                            IsActive = true,
                            MemoryCapacity = 256,
                            Name = "Huawei P50",
                            Price = 899.99000000000001,
                            ScreenSize = 6.5999999999999996,
                            Stock = 15,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7380)
                        },
                        new
                        {
                            ID = 5,
                            BrandID = 5,
                            CategoryID = 1,
                            Colour = "Winter Mist",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7381),
                            Description = "Flagship killer from OnePlus.",
                            Image = "https://www.refurbished.be/cache/images/oneplus-9-pro-zwart-frontandback_600x600_BGresize_16777215-tj.png",
                            IsActive = true,
                            MemoryCapacity = 128,
                            Name = "OnePlus 9",
                            Price = 729.99000000000001,
                            ScreenSize = 6.5,
                            Stock = 18,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7382)
                        },
                        new
                        {
                            ID = 6,
                            BrandID = 1,
                            CategoryID = 1,
                            Colour = "Mystic Bronze",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7385),
                            Description = "Samsung's premium phone with S-Pen.",
                            Image = "https://www.refurbished.be/cache/images/note20_brons_multi_600x600_BGresize_16777215-tj.png",
                            IsActive = true,
                            MemoryCapacity = 256,
                            Name = "Samsung Galaxy Note 20",
                            Price = 949.99000000000001,
                            ScreenSize = 6.7000000000000002,
                            Stock = 10,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7386)
                        },
                        new
                        {
                            ID = 7,
                            BrandID = 2,
                            CategoryID = 1,
                            Colour = "Blue",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7388),
                            Description = "Previous generation iPhone with great performance.",
                            Image = "https://store.storeimages.cdn-apple.com/4668/as-images.apple.com/is/refurb-iphone-12-black-2020?wid=1144&hei=1144&fmt=jpeg&qlt=90&.v=1635202741000",
                            IsActive = true,
                            MemoryCapacity = 128,
                            Name = "Apple iPhone 12",
                            Price = 799.99000000000001,
                            ScreenSize = 6.0999999999999996,
                            Stock = 22,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7388)
                        },
                        new
                        {
                            ID = 8,
                            BrandID = 3,
                            CategoryID = 1,
                            Colour = "Just Black",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7391),
                            Description = "Compact and powerful Google phone.",
                            Image = "https://www.refurbished.be/cache/images/google-pixel-5-zwart-multi_600x600_BGresize_16777215-tj.png",
                            IsActive = true,
                            MemoryCapacity = 128,
                            Name = "Google Pixel 5",
                            Price = 599.99000000000001,
                            ScreenSize = 6.0,
                            Stock = 25,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7392)
                        },
                        new
                        {
                            ID = 9,
                            BrandID = 4,
                            CategoryID = 1,
                            Colour = "Space Silver",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7394),
                            Description = "Top-tier Huawei device with excellent camera.",
                            Image = "https://www.refurbished.be/cache/images/huawei-mate-40-pro-zwart-frontandback_600x600_BGresize_16777215-tj.png",
                            IsActive = true,
                            MemoryCapacity = 256,
                            Name = "Huawei Mate 40",
                            Price = 1099.99,
                            ScreenSize = 6.7999999999999998,
                            Stock = 12,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7394)
                        },
                        new
                        {
                            ID = 10,
                            BrandID = 5,
                            CategoryID = 1,
                            Colour = "Aquamarine Green",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7397),
                            Description = "Fast and fluid experience from OnePlus.",
                            Image = "https://oasis.opstatics.com/content/dam/oasis/default/product-specs/8t-green.png",
                            IsActive = true,
                            MemoryCapacity = 128,
                            Name = "OnePlus 8T",
                            Price = 649.99000000000001,
                            ScreenSize = 6.5,
                            Stock = 17,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7398)
                        },
                        new
                        {
                            ID = 11,
                            BrandID = 1,
                            CategoryID = 1,
                            Colour = "Phantom Black",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7400),
                            Description = "Folding phone with a large display.",
                            Image = "https://media.asmartworld.be/smartphones-samsung-galaxy-z-fold3-5g_550_550-4552.jpg",
                            IsActive = true,
                            MemoryCapacity = 256,
                            Name = "Samsung Galaxy Z Fold 3",
                            Price = 1799.99,
                            ScreenSize = 7.5999999999999996,
                            Stock = 5,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7400)
                        },
                        new
                        {
                            ID = 12,
                            BrandID = 2,
                            CategoryID = 1,
                            Colour = "Red",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7402),
                            Description = "Compact iPhone with powerful internals.",
                            Image = "https://www.forza-refurbished.be/media/catalog/product/cache/d29a0fbb193099ba8eda5bb143f05214/r/e/refurbished-iphone-se-2020-rood-thumbnail.jpg",
                            IsActive = true,
                            MemoryCapacity = 64,
                            Name = "Apple iPhone SE",
                            Price = 399.99000000000001,
                            ScreenSize = 4.7000000000000002,
                            Stock = 40,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7403)
                        },
                        new
                        {
                            ID = 13,
                            BrandID = 3,
                            CategoryID = 1,
                            Colour = "Barely Blue",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7405),
                            Description = "Affordable Google phone with great camera.",
                            Image = "https://www.refurbished.be/cache/images/google-pixel-4a-zwart-frontandback_600x600_BGresize_16777215-tj.png",
                            IsActive = true,
                            MemoryCapacity = 128,
                            Name = "Google Pixel 4a",
                            Price = 349.99000000000001,
                            ScreenSize = 5.7999999999999998,
                            Stock = 33,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7406)
                        },
                        new
                        {
                            ID = 14,
                            BrandID = 4,
                            CategoryID = 1,
                            Colour = "Midnight Black",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7408),
                            Description = "Budget-friendly Huawei device.",
                            Image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNzKch8GGQHin4EU4WoX1szX7pS0vvXo_UkA&s",
                            IsActive = true,
                            MemoryCapacity = 128,
                            Name = "Huawei Y9s",
                            Price = 249.99000000000001,
                            ScreenSize = 6.5,
                            Stock = 19,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7409)
                        },
                        new
                        {
                            ID = 15,
                            BrandID = 5,
                            CategoryID = 1,
                            Colour = "Gray Onyx",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7411),
                            Description = "Mid-range OnePlus phone with great value.",
                            Image = "https://www.refurbished.be/cache/images/oneplus-nord-5g-grijs-frontandback_600x600_BGresize_16777215-tj.png",
                            IsActive = true,
                            MemoryCapacity = 128,
                            Name = "OnePlus Nord",
                            Price = 399.99000000000001,
                            ScreenSize = 6.4000000000000004,
                            Stock = 24,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7412)
                        },
                        new
                        {
                            ID = 16,
                            BrandID = 1,
                            CategoryID = 1,
                            Colour = "Awesome Blue",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7414),
                            Description = "Solid mid-range Samsung device.",
                            Image = "https://www.refurbished.be/cache/images/a52_multi_blue_600x600_BGresize_16777215-tj.png",
                            IsActive = true,
                            MemoryCapacity = 128,
                            Name = "Samsung Galaxy A52",
                            Price = 349.99000000000001,
                            ScreenSize = 6.5,
                            Stock = 35,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7415)
                        },
                        new
                        {
                            ID = 17,
                            BrandID = 2,
                            CategoryID = 1,
                            Colour = "Green",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7417),
                            Description = "Previous generation iPhone with great performance.",
                            Image = "https://www.detelecomshop.net/wp-content/uploads/2020/08/New-Project-1-1.jpg",
                            IsActive = true,
                            MemoryCapacity = 64,
                            Name = "Apple iPhone 11",
                            Price = 599.99000000000001,
                            ScreenSize = 6.0999999999999996,
                            Stock = 28,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7418)
                        },
                        new
                        {
                            ID = 18,
                            BrandID = 3,
                            CategoryID = 1,
                            Colour = "Not Pink",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7420),
                            Description = "Older Google phone with excellent camera.",
                            Image = "https://www.refurbished.be/cache/images/google-pixel-3-xl-zwart-multi_600x600_BGresize_16777215-tj.png",
                            IsActive = true,
                            MemoryCapacity = 64,
                            Name = "Google Pixel 3 XL",
                            Price = 299.99000000000001,
                            ScreenSize = 6.2999999999999998,
                            Stock = 12,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7421)
                        },
                        new
                        {
                            ID = 19,
                            BrandID = 4,
                            CategoryID = 1,
                            Colour = "Space Silver",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7423),
                            Description = "Huawei flagship with powerful specs.",
                            Image = "https://mobiele-telefoon-verzekering.be/img/mobile/huawei-mate-30-pro/mate30-pro-space-silver-new.png",
                            IsActive = true,
                            MemoryCapacity = 256,
                            Name = "Huawei Mate 30 Pro",
                            Price = 1099.99,
                            ScreenSize = 6.5,
                            Stock = 10,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7424)
                        },
                        new
                        {
                            ID = 20,
                            BrandID = 5,
                            CategoryID = 1,
                            Colour = "Nebula Blue",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7426),
                            Description = "Previous generation OnePlus flagship.",
                            Image = "https://www.refurbished.be/cache/images/oneplus-7-pro-grijs-frontandback_600x600_BGresize_16777215-tj.png",
                            IsActive = true,
                            MemoryCapacity = 128,
                            Name = "OnePlus 7 Pro",
                            Price = 499.99000000000001,
                            ScreenSize = 6.7000000000000002,
                            Stock = 15,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7427)
                        },
                        new
                        {
                            ID = 21,
                            BrandID = 1,
                            CategoryID = 1,
                            Colour = "Cosmic Gray",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7429),
                            Description = "Flagship Samsung smartphone with advanced camera features.",
                            Image = "https://www.electrodepot.be/media/catalog/product/P968553.jpg",
                            IsActive = true,
                            MemoryCapacity = 128,
                            Name = "Samsung Galaxy S20",
                            Price = 999.99000000000001,
                            ScreenSize = 6.2000000000000002,
                            Stock = 15,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7430)
                        },
                        new
                        {
                            ID = 22,
                            BrandID = 2,
                            CategoryID = 1,
                            Colour = "Black",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7432),
                            Description = "Latest Apple iPhone with dual camera system.",
                            Image = "https://cdn.centralpoint.be/objects/high_pic/f/f0a/3300900_smartphones-apple-iphone-11-mhda3zd-a.jpg",
                            IsActive = true,
                            MemoryCapacity = 64,
                            Name = "Apple iPhone 11",
                            Price = 699.99000000000001,
                            ScreenSize = 6.0999999999999996,
                            Stock = 30,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7432)
                        },
                        new
                        {
                            ID = 23,
                            BrandID = 3,
                            CategoryID = 1,
                            Colour = "Just Black",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7434),
                            Description = "Google's smartphone with excellent camera and Google Assistant integration.",
                            Image = "https://www.refurbished.be/cache/images/google-pixel-4-wit-frontandback_600x600_BGresize_16777215-tj.png",
                            IsActive = true,
                            MemoryCapacity = 128,
                            Name = "Google Pixel 4",
                            Price = 799.99000000000001,
                            ScreenSize = 5.7000000000000002,
                            Stock = 25,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7435)
                        },
                        new
                        {
                            ID = 24,
                            BrandID = 4,
                            CategoryID = 1,
                            Colour = "Aurora",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7437),
                            Description = "High-end Huawei device with superior zoom camera capabilities.",
                            Image = "https://consumer.huawei.com/content/dam/huawei-cbg-site/common/mkt/list-image/phones/p30-pro/P30Pro_skyblue.png",
                            IsActive = true,
                            MemoryCapacity = 256,
                            Name = "Huawei P30 Pro",
                            Price = 899.99000000000001,
                            ScreenSize = 6.5,
                            Stock = 10,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7438)
                        },
                        new
                        {
                            ID = 25,
                            BrandID = 2,
                            CategoryID = 1,
                            Colour = "Black",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7440),
                            Description = "New iphone flagship!",
                            Image = "https://assets.swappie.com/cdn-cgi/image/width=600,height=600,fit=contain,format=auto/swappie-iphone-15-pro-max-natural-titanium.png?v=9166c13e",
                            IsActive = true,
                            MemoryCapacity = 128,
                            Name = "Iphone 15 Pro Max",
                            Price = 949.99000000000001,
                            ScreenSize = 6.7000000000000002,
                            Stock = 12,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7441)
                        },
                        new
                        {
                            ID = 26,
                            BrandID = 1,
                            CategoryID = 1,
                            Colour = "Black",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7443),
                            Description = "New camera's, new design.",
                            Image = "https://images.samsung.com/is/image/samsung/p6pim/be/2401/gallery/be-galaxy-s24-s928-sm-s928bztgeub-thumb-539420288",
                            IsActive = true,
                            MemoryCapacity = 128,
                            Name = "Samsung Galaxy S24 Ultra",
                            Price = 499.99000000000001,
                            ScreenSize = 6.7999999999999998,
                            Stock = 50,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7444)
                        },
                        new
                        {
                            ID = 27,
                            BrandID = 5,
                            CategoryID = 1,
                            Colour = "Onyx Black",
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7446),
                            Description = "Next-gen OnePlus device with fluid display and wireless charging.",
                            Image = "https://www.refurbished.be/cache/images/oneplus-8-pro-zwart-duo_600x600_BGresize_16777215-tj.png",
                            IsActive = true,
                            MemoryCapacity = 256,
                            Name = "OnePlus 8 Pro",
                            Price = 799.99000000000001,
                            ScreenSize = 6.5,
                            Stock = 18,
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7447)
                        });
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.UserEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BasketID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(9999)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("BasketID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BasketID = 1,
                            Created = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7475),
                            Email = "test@test.be",
                            IsActive = true,
                            Name = "TestUser",
                            Password = "123",
                            Role = "[\"Admin\"]",
                            Updated = new DateTime(2024, 6, 6, 8, 30, 8, 361, DateTimeKind.Local).AddTicks(7476)
                        });
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.BasketProductEntity", b =>
                {
                    b.HasOne("Webshop_Project.API.Data.Entities.BasketEntity", "Basket")
                        .WithMany("ListProducts")
                        .HasForeignKey("BasketID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Webshop_Project.API.Data.Entities.SmartphoneEntity", "Product")
                        .WithMany("ProductsInBaskets")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.OrderProductEntity", b =>
                {
                    b.HasOne("Webshop_Project.API.Data.Entities.OrderEntity", null)
                        .WithMany("ListProducts")
                        .HasForeignKey("OrderEntityID");

                    b.HasOne("Webshop_Project.API.Data.Entities.SmartphoneEntity", null)
                        .WithMany("ProductsInOrders")
                        .HasForeignKey("SmartphoneEntityID");
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.SmartphoneEntity", b =>
                {
                    b.HasOne("Webshop_Project.API.Data.Entities.BrandEntity", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Webshop_Project.API.Data.Entities.CategoryEntity", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.UserEntity", b =>
                {
                    b.HasOne("Webshop_Project.API.Data.Entities.BasketEntity", "Basket")
                        .WithMany()
                        .HasForeignKey("BasketID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.BasketEntity", b =>
                {
                    b.Navigation("ListProducts");
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.OrderEntity", b =>
                {
                    b.Navigation("ListProducts");
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.SmartphoneEntity", b =>
                {
                    b.Navigation("ProductsInBaskets");

                    b.Navigation("ProductsInOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
