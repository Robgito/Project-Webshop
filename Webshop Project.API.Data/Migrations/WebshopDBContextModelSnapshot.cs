// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Webshop_Project.API.Data;

#nullable disable

namespace Webshop_Project.API.Data.Migrations
{
    [DbContext(typeof(WebshopDBContext))]
    partial class WebshopDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.BasketEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double>("ShippingPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Basket");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Created = new DateTime(2024, 5, 23, 10, 33, 44, 76, DateTimeKind.Local).AddTicks(1054),
                            IsActive = true,
                            ShippingPrice = 25.0,
                            Updated = new DateTime(2024, 5, 23, 10, 33, 44, 76, DateTimeKind.Local).AddTicks(1058)
                        });
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.BasketProductEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("BasketEntityID")
                        .HasColumnType("int");

                    b.Property<int>("BasketID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("SmartphoneEntityID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("BasketEntityID");

                    b.HasIndex("SmartphoneEntityID");

                    b.ToTable("BasketProducts");
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.BrandEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Created = new DateTime(2024, 5, 23, 10, 33, 44, 76, DateTimeKind.Local).AddTicks(880),
                            IsActive = true,
                            Name = "Samsung",
                            Updated = new DateTime(2024, 5, 23, 10, 33, 44, 76, DateTimeKind.Local).AddTicks(886)
                        });
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.CategoryEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Created = new DateTime(2024, 5, 23, 10, 33, 44, 76, DateTimeKind.Local).AddTicks(538),
                            IsActive = true,
                            Name = "Test",
                            Updated = new DateTime(2024, 5, 23, 10, 33, 44, 76, DateTimeKind.Local).AddTicks(610)
                        });
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.OrderEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StreetNumber")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.OrderProductEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("OrderEntityID")
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("SmartphoneEntityID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("OrderEntityID");

                    b.HasIndex("SmartphoneEntityID");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.SmartphoneEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BrandID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Colour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("MemoryCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double?>("ScreenSize")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("BrandID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Smartphones");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BrandID = 1,
                            CategoryID = 1,
                            Colour = "Red",
                            Created = new DateTime(2024, 5, 23, 10, 33, 44, 76, DateTimeKind.Local).AddTicks(954),
                            Description = "Lorem Ipsum",
                            Image = "LoremPicsum",
                            IsActive = true,
                            MemoryCapacity = 125,
                            Name = "Samsung",
                            Price = 1099.99,
                            Stock = 5,
                            Updated = new DateTime(2024, 5, 23, 10, 33, 44, 76, DateTimeKind.Local).AddTicks(959)
                        });
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.UserEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BasketID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("BasketID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.BasketProductEntity", b =>
                {
                    b.HasOne("Webshop_Project.API.Data.Entities.BasketEntity", null)
                        .WithMany("ListProducts")
                        .HasForeignKey("BasketEntityID");

                    b.HasOne("Webshop_Project.API.Data.Entities.SmartphoneEntity", null)
                        .WithMany("ProductsInBaskets")
                        .HasForeignKey("SmartphoneEntityID");
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.OrderProductEntity", b =>
                {
                    b.HasOne("Webshop_Project.API.Data.Entities.OrderEntity", null)
                        .WithMany("ListProducts")
                        .HasForeignKey("OrderEntityID");

                    b.HasOne("Webshop_Project.API.Data.Entities.SmartphoneEntity", null)
                        .WithMany("ProductsInOrders")
                        .HasForeignKey("SmartphoneEntityID");
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.SmartphoneEntity", b =>
                {
                    b.HasOne("Webshop_Project.API.Data.Entities.BrandEntity", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Webshop_Project.API.Data.Entities.CategoryEntity", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.UserEntity", b =>
                {
                    b.HasOne("Webshop_Project.API.Data.Entities.BasketEntity", "Basket")
                        .WithMany()
                        .HasForeignKey("BasketID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.BasketEntity", b =>
                {
                    b.Navigation("ListProducts");
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.OrderEntity", b =>
                {
                    b.Navigation("ListProducts");
                });

            modelBuilder.Entity("Webshop_Project.API.Data.Entities.SmartphoneEntity", b =>
                {
                    b.Navigation("ProductsInBaskets");

                    b.Navigation("ProductsInOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
